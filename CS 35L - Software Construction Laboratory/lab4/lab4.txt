Wenlong Xiong
204407085
Lab 4

Lab Portion --------------------------------------------------------------------

1)
First, I cloned the git repository into a temporary directory with the 
following command:
    git clone git://git.savannah.gnu.org/diffutils.git
2)
Then I generated the logs for the project, by using the command:
    git log > git-log.txt
3)
Then I generated a list of tags for the project, using the command:
    git tag > git-tag.txt
4)
I then found the commit number by running the command:
    cat git-log.txt | grep --before-context=5 "maint: quote"
The commit number was the number 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f in 
the following output:
    commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
    Author: Paul Eggert <eggert@cs.ucla.edu>
    Date:   Wed Jan 25 23:46:16 2012 -0800

        maint: quote 'like this' or "like this", not `like this'
    --

        This is in response to a recent change in the GNU coding standards,
        which now suggest quoting 'like this' or "like this", instead of
        `like this' or ``like this''.
I then created the patch file with the command:
    git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
and the output was:
    0001-maint-quote-like-this-or-like-this-not-like-this.patch
which I renamed to quote-patch.txt
    mv 0001-maint-quote-like-this-or-like-this-not-like-this.patch 
quote-patch.txt

5)
I used the following command to revert to the tag v3.0
    git reset --hard v3.0
    git revert v3.0

6)
I then applied the patch
    patch -p1 < quote-patch.txt
I got the following errors:
    |diff --git a/HACKING b/HACKING
    |index 3a99833..522e0b5 100644
    |--- a/HACKING
    |+++ b/HACKING
    --------------------------
    File to patch:
    Skip this patch? [y] y
    Skipping patch.
    1 out of 1 hunk ignored
    patching file README
    Hunk #1 FAILED at 9.
    Hunk #3 FAILED at 60.
    2 out of 3 hunks FAILED -- saving rejects to file README.rej
    patching file README-hacking
    Hunk #1 FAILED at 19.
    1 out of 1 hunk FAILED -- saving rejects to file README-hacking.rej
    patching file cfg.mk
    Hunk #1 FAILED at 29.
    1 out of 1 hunk FAILED -- saving rejects to file cfg.mk.rej
    can't find file to patch at input line 249
    Perhaps you used the wrong -p or --strip option?
    The text leading up to this was:
    --------------------------
    |diff --git a/doc/diffutils.texi b/doc/diffutils.texi
    |index 58b140c..00403df 100644
    |--- a/doc/diffutils.texi
    |+++ b/doc/diffutils.texi
    --------------------------    
    can't find file to patch at input line 262
    Perhaps you used the wrong -p or --strip option?
    The text leading up to this was:
    --------------------------
    |diff --git a/man/help2man b/man/help2man
    |index f9983f7..8bc961c 100755
    |--- a/man/help2man
    |+++ b/man/help2man
    --------------------------
    patching file src/diff.c
    Hunk #1 succeeded at 40 with fuzz 2 (offset -2 lines).
    Hunk #2 succeeded at 57 (offset -2 lines).
    Hunk #3 succeeded at 92 (offset -2 lines).
    Hunk #4 succeeded at 330 (offset -10 lines).
    Hunk #5 succeeded at 505 (offset -10 lines).
    Hunk #6 succeeded at 534 (offset -10 lines).
    Hunk #7 succeeded at 585 (offset -14 lines).
    Hunk #8 succeeded at 744 (offset -14 lines).
    Hunk #9 succeeded at 826 (offset -14 lines).
    Hunk #10 FAILED at 862.
    Hunk #11 FAILED at 892.
    Hunk #12 FAILED at 928.
    Hunk #13 succeeded at 960 with fuzz 2 (offset -29 lines).
    Hunk #14 succeeded at 1159 with fuzz 2 (offset -32 lines).
    3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
    patching file src/diff3.c
    Hunk #1 succeeded at 35 (offset 1 line).
    Hunk #2 succeeded at 159 (offset 1 line).
    Hunk #3 succeeded at 316 (offset 1 line).
    Hunk #4 succeeded at 351 (offset 1 line).
    Hunk #5 succeeded at 412 (offset 1 line).
    Hunk #6 FAILED at 434.
    Hunk #7 succeeded at 460 with fuzz 2 (offset -18 lines).
    Hunk #8 succeeded at 1275 (offset -18 lines).
    Hunk #9 succeeded at 1475 (offset -18 lines).
    1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej
7)
I entered the command git status, and got the following messages. The following 
files were modified:
    modified:   NEWS
    modified:   README
    modified:   TODO
    modified:   doc/diagmeet.note
    modified:   ms/config.bat
    modified:   ms/config.site
    modified:   po/en.po
    modified:   src/analyze.c
    modified:   src/cmp.c
    modified:   src/context.c
    modified:   src/diff.c
    modified:   src/diff.h
    modified:   src/diff3.c
    modified:   src/dir.c
    modified:   src/ifdef.c
    modified:   src/io.c
    modified:   src/sdiff.c
    modified:   src/side.c
    modified:   src/system.h
    modified:   src/util.c
    modified:   tests/help-version
and the following files were created:
    NEWS.orig
    NEWS.rej
    README-hacking.orig
    README-hacking.rej
    README.orig
    README.rej
    cfg.mk.orig
    cfg.mk.rej
    ms/config.site.orig
    quote-patch.txt
    src/cmp.c.orig
    src/context.c.orig
    src/diff.c.orig
    src/diff.c.rej
    src/diff.h.orig
    src/diff3.c.orig
    src/diff3.c.rej
    src/dir.c.orig
    src/sdiff.c.orig
    src/system.h.orig
    src/util.c.orig
    tests/help-version.orig
8)
C-x v u
    reverts to the previous revision
C-x v =
    opens the diff buffer between current and previous revision

9)
I used the emacs function "C-x v u" to revert the files:
    emacs FILENAME
    C-x v u
    yes
    C-x C-c
I repeated this for all the files but the *.c files. Then, I reverted the 
changes in the *.c files (reverted all the comments, and the punctuation as 
well)
    emacs FILENAME
    C-x v =
    M-n (to move to the next hunk)
    M-p (to move to the previous hunk)
    C-u C-c C-a (to undo the hunk)
    C-x C-c
This resulted in only 6 modified files
    modified:   src/cmp.c
    modified:   src/diff.c
    modified:   src/diff3.c
    modified:   src/dir.c
    modified:   src/sdiff.c
    modified:   src/util.c
10)
I then opened up the following *.rej files and copied in the hunks to their 
corresponding *.c files
    src/diff.c.rej
    src/diff3.c.rej
11)
I then removed all the untracked files
    git clean -f
12)
I ran the command:
    git status
Which told me I only had 6 modified files
    modified:   src/cmp.c
    modified:   src/diff.c
    modified:   src/diff3.c
    modified:   src/dir.c
    modified:   src/sdiff.c
    modified:   src/util.c
and the following command told me that there were 326 lines in the diff
    git diff | wc -l
I put the diff into a patch file:
    git diff > quote-3.0-patch.txt
13)
I ran the following commands:
    ./bootstrap
    ./configure
    make
    make check
14)
I checked the our patched diff with the system diff, and got the same results, 
except every ` was replaced with a '
    ./src/diff . -
    ./src/diff --help
I then make another directory, with a v3.0 version of diff:
    cd ..
    mv diffutils/ diffutils-3.0-patch/
    git clone git://git.savannah.gnu.org/diffutils.git
    mv diffutils/ diffutils-3.0/
    cd diffutils-3.0/
    git reset --hard v3.0
    git revert v3.0
    ./diffutils-3.0-patch/diff -pru diffutils-3.0/ diffutils-3.0-patch/ > 
quote-3.0-test.txt
15)
I then compared quote-3.0-test.txt with quote-3.0-patch.txt:
    diff quote-3.0-test.txt quote-3.0-patch.txt
The files had a lot of differences, but this was because I built and ran the 
command make on the diffutils-3.0-patch, and not the diffutils-3.0. The hunks 
themselves were the same - there was no source code difference.












