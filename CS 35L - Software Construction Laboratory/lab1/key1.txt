Wenlong Xiong
204407085

1.1
2) C-s A S C I I Enter
3) M-g g 1 C-s I n s t r u c t i o n s Enter
4) M-g g 1 C-s H T M L Enter M-b
5) M-g g 1 C-s h u n t Enter M-b
6) C-e
7) C-a
8) M-g g 1

1.2
U_ARR is the up arrow on the keyboard
2) M-g g 1 8 C-k
3) C-s D E L E T E M E Enter C-a C-k
4) C-s # C o m m e n t s C-s Enter U_ARR M-z > M-z >
5) C-r < ! - Enter Backspace Backspace Backspace M-z >

1.3
2) M-% A s s i g n m e n t SP 1 Enter A s s i g n m e n t SP 3 7 Enter SP SP 
Enter
3) M-g g 1 M-% U T F - 8 Enter U S - A S C I I Enter SP Enter
4) M-g g 1 C-s < o l > Enter C-e Enter
5) C-x C-s U S SP A S C I I C-x C-c

1.4
U_ARR is the up arrow on the keyboard
D_ARR is the down arrow on the keyboard
R_ARR is the right arrow on the keyboard
3) M-> C-r < p > C-r Enter C-k C-r n u m b e r Enter C-a C-y C-k
4) M-> C-r - - > C-r Enter R_ARR R_ARR R_ARR C-SP U_ARR U_ARR C-a C-w C-r S u b 
m i t C-r C-r Enter D_ARR Enter C-y C-a C-d U_ARR C-d U_ARR C-d
M-> C-r D E L E T E Enter C-a C-k C-r H o m e w o r k C-r Enter D_ARR Enter C-y 
C-a C-d
M-> C-r d i f f Enter C-a C-k C-r h u n t C-r C-r Enter D_ARR C-y C-a C-d
5) M-> C-SP C-r - - - SP e Enter C-w
6) C-/
7) < ! - - SP M-> - - >
8) M-g g 1 M-% < o l > Enter < O L > Enter SP SP SP SP SP SP SP

I found 7 instances of <ol> in total

1.5
LOG_FILE is the path to the log file you're maintaining
1) C-x d Enter + j u n k Enter
2) Enter C-x C-f h e l l o . c Enter # i n c l u d e SP < s t d i o . h > Enter 
i n t Enter m a i n SP ( v o i d ) Enter { Enter Tab c h a r SP n SP = SP ' \ n 
' ; Enter Tab c h a r SP b SP = SP ' \ \ ' ; Enter Tab c h a r SP q SP = SP ' " 
' ; Enter Tab c h a r SP c o n s t SP * p SP = SP " # i n c l u d e SP < s t d 
i o . h > % c i n t % c m a i n SP ( v o i d ) % c { % c SP SP c h a r SP n SP 
= SP ' % c n ' ; % c SP SP c h a r SP b SP = SP ' % c % c ' ; % c SP SP c h a r 
SP q SP = SP ' % c ' ; % c SP SP c h a r SP c o n s t SP * p SP = SP % c % s % 
c ; % c SP SP p r i n t f SP ( p , SP n , SP n , SP n , SP n , SP b , SP n , SP 
b , SP b , SP n , SP q , SP n , SP q , SP p , SP q , SP n , SP n , SP n , SP n 
) ; % c SP SP r e t u r n SP 0 ; % c } % c " ; Enter Tab p r i n t f SP ( p , 
SP n , SP n , SP n , SP n , SP b , SP n , SP b , SP b , SP n , SP q , SP n , SP 
q , SP p , SP q , SP n , SP n , SP n , SP n ) ; Enter Tab r e t u r n SP 0 ; 
Enter } C-x C-s
3) M-x c o m p i l e Enter g c c SP h e l l o . c SP - o SP h e l l o Enter
4) M-! . / h e l l o > h e l l o - o u t
5) C-x C-f h e l l o - o u t C-a M-> M-w C-x C-f LOG_FILE M-> C-y

Buffer:
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c 
 char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, 
n, n, n, b, n, b, b,\
 n, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

1.6
1) C-x b *scratch* Enter
2) ( r a n d o m ) C-j
-737004071327947834
3) ( s e t SP x SP ( r a n d o m ) ) C-j
x = -737004071327947834
( s e t SP y SP ( r a n d o m ) ) C-j
y = -1000278277145540493
( s e t SP z SP ( r a n d o m ) ) C-j
z = -759900912694765332

4) ( * SP x SP y SP z)
x * y * z = -881039102163551464
The answer is not the correct mathematical answer, because the value of x*y*z 
should be a much more negative number than -982548919401306098

5) M-: ( * SP x SP y SP z)
This produced the same answer as in (4), but also outputted the hex and octal 
versions of the product
-881039102163551464 (#o117057271530223775430, #x13c5eb9ac24ffb18)

6) Randomly generated numbers aren't random, because they are generated from a 
seed value. As a result, if 2 random numbers use the same seed, they will have 
the same value
