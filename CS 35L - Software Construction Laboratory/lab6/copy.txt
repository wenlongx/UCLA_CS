Hw6
Michael Xiong
UID: 404463570

1.
Even if the other team were monitoring every byte sent across the network, 
the resulting network is still secure. This is because all bytes sent 
across the network is encrypted with my partner's public key, and can only 
be decrypted by him. Any bytes sent from him to me are encrypted with my 
public key, and can only be read by me. As long as our private keys remain 
secret, it is very difficult to decrypt the encrypted bytes (not 
impossible). 
If they had tapped our keystrokes, the security is not compromised. They 
would know what commands we had used to generate the keys, which are 
pretty universal. The key itself would still have been generated by the 
system, and saved into our .ssh folder. At no point is the key typed out.
If they had physical control of the boot drive, then the privacy of the 
.ssh directory would have been compromised, and they would gain access to 
our private keys. They would then be able to decrypt messages sent to me 
with my public key.

2.
The gpg --verify command only ensures that the file has not been modified 
in any way since it was created. It does so by comparing the hash of the 
file with the hash received by decrypting the signature. This guarantees 
that the file received is the same as the file sent. However, no guarantee 
can be made about the identity of the sender, as anybody can generate a 
digital signature. In order to get around this, we would need to verify 
the public key authenticity with a certificate authority. In doing so, we 
could be sure that the public key used to decrypt the signature was the 
same as the one used by the sender.
